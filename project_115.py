# -*- coding: utf-8 -*-
"""Project-115.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uC5tM_pllVSMb2RsFxJzuZIX3JsKBHCx
"""

from google.colab import files
a = files.upload()

import pandas as pd
import plotly.express as px

df = pd.read_csv("velocity.csv")

velocity_list = df["Velocity"].tolist()
escaped_list = df["Escaped"].tolist()

fig = px.scatter(x=velocity_list,y=escaped_list)
fig.show()

import numpy as np

velocity_array = np.array(velocity_list)
escaped_array = np.array(escaped_list)

m, c = np.polyfit(velocity_array, escaped_array ,1)

y = []
for x in velocity_array:
  y_value = m*x + c
  y.append(y_value)

fig = px.scatter(x=velocity_array, y=escaped_array)
fig.update_layout(shapes=[
    dict(
        type= 'line',
         y0 = min(y), y1=max(y),
         x0 = min(velocity_array), x1 = max(velocity_array)
    )
])
fig.show()

import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression

X = np.reshape(velocity_list, (len(velocity_list), 1))
Y = np.reshape(escaped_list, (len(escaped_list), 1))

lr = LogisticRegression()
lr.fit(X,Y)

plt.figure()
plt.scatter(X.ravel(), Y, color='black', zorder=20)

def model(x):
  return 1 / (1 + np.exp(-x))

X_test = np.linspace(0,100,200)
chances = model(X_test * lr.coef_ + lr.intercept_).ravel()

plt.plot(X_test, chances, color='red', linewidth=3)
plt.axhline(y=0, color='k', linestyle='-')
plt.axhline(y=1, color='k', linestyle='-')
plt.axhline(y=0.5, color='b', linestyle='--')

plt.axvline(x=X_test[23], color='b', linestyle='--')

plt.ylabel('y')
plt.xlabel('X')
plt.xlim(0, 30)
plt.show()

temp = float(input("Enter the Velocity:"))
chances = model(temp * lr.coef_ + lr.intercept_).ravel()[0]
if chances <= 0.01:
  print("Cannot Escape")
elif chances >= 1:
  print("You can Escape")
elif chances < 0.5:
  print("You might not get escaped")
else:
  print("You might get escaped")